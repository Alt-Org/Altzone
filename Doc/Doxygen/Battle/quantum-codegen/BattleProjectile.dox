/// @file BattleProjectile.qtn
/// <summary>
/// Contains flags and component used for the projectile.
/// </summary>
///
/// ## Generated Enums
/// - @cref{Quantum,BattleProjectileCollisionFlags}  
///   @copybrief Quantum.BattleProjectileCollisionFlags
///
/// ## Generated Structs
/// - @cref{Quantum,BattleProjectileQComponent}  
///   @copybrief Quantum.BattleProjectileQComponent

/// @enum Quantum::BattleProjectileCollisionFlags
/// <summary>
/// Flags that are used to ensure the projectile doesn't collide with multiple SoulWalls during the same frame.
/// </summary>
///
/// @bigtext{Generated from @ref BattleProjectile.qtn}

/// @struct Quantum::BattleProjectileQComponent
/// <summary>
/// Contains projectile's data, including speed, direction, emotion, etc.
/// </summary>
///
/// @bigtext{Generated from @ref BattleProjectile.qtn}

/// @var bool Quantum.BattleProjectileQComponent::IsLaunched
/// <summary>Is the projectile launched or not.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::Speed
/// <summary>Projectile's speed.</summary>
///
/// @var FPVector2 Quantum.BattleProjectileQComponent::Direction
/// <summary>The direction the projectile is going towards.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::Radius
/// <summary>Projectile's radius.</summary>
///
/// @var BattleEmotionState Quantum.BattleProjectileQComponent::Emotion
/// <summary>Which emotion the projectile has at the moment.</summary>
///
/// @var array Quantum.BattleProjectileQComponent::CollisionFlags
/// <summary>Array of flags for projectile's collisions. Used to prevent hitting multiple entities per frame.</summary>
///
/// @var byte Quantum.BattleProjectileQComponent::_CollisionFlags_
/// <summary>Flag for projectile's collisions.</summary>