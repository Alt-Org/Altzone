/// @file BattleProjectile.qtn
/// <summary>
/// Contains flags and component used for the projectile.
/// </summary>
///
/// ## Generated Enums
/// - @cref{Quantum,BattleProjectileCollisionFlags}  
///   @copybrief Quantum.BattleProjectileCollisionFlags
///
/// ## Generated Structs
/// - @cref{Quantum,BattleProjectileQComponent}  
///   @copybrief Quantum.BattleProjectileQComponent

// ---------------------------------------------------------------------------------------------------- //

/// @enum Quantum::BattleProjectileCollisionFlags
/// <summary>
/// Flags that are used to ensure the projectile doesn't collide with multiple SoulWalls during the same frame.
/// </summary>
///
/// @bigtext{Generated from @ref BattleProjectile.qtn}

/// @struct Quantum::BattleProjectileQComponent
/// <summary>
/// Contains projectile's data, including speed, direction, emotion, etc.
/// </summary>
///
/// @bigtext{Generated from @ref BattleProjectile.qtn}

// ---------------------------------------------------------------------------------------------------- //

/// @var bool Quantum.BattleProjectileQComponent::IsLaunched
/// <summary>Is the projectile launched or not.</summary>
///
/// @var bool Quantum.BattleProjectileQComponent::IsMoving
/// <summary>Is the projectile moving or not.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::Speed
/// <summary>Projectile's speed.</summary>
///
/// @var FixedArray<FP> Quantum.BattleProjectileQComponent::SpeedMultiplierArray
/// <summary>Property for accessing the @cref{Quantum.BattleProjectileQComponent,_SpeedMultiplierArray_} array for multiplying speed depending on the projectile's emotion state.</summary>
///
/// @var Byte Quantum.BattleProjectileQComponent::_SpeedMultiplierArray_
/// <summary>
/// An array used internally for holding values for multiplying speed depending on the projectile's emotion state.  
/// Use @cref{Quantum.BattleProjectileQComponent,SpeedMultiplierArray} for accessing the values.
/// </summary>
///
/// @var FP Quantum.BattleProjectileQComponent::SpeedPotential
/// <summary>Used for updating projectile's speed.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::SpeedIncrement
/// <summary>Amount which SpeedPotential is increased.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::AccelerationTimer
/// <summary>Timer for speeding up the ball.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::AccelerationTimerDuration
/// <summary>Used for setting AccelerationTimer.</summary>
///
/// @var FPVector2 Quantum.BattleProjectileQComponent::Direction
/// <summary>The direction the projectile is going towards.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::Radius
/// <summary>Projectile's radius.</summary>
///
/// @var BattleEmotionState Quantum.BattleProjectileQComponent::Emotion
/// <summary>Which emotion the projectile has at the moment.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::Attack
/// <summary>Projectile's attack damage.</summary>
///
/// @var FP Quantum.BattleProjectileQComponent::AttackMax
/// <summary>Projectile's maximum attack damage.</summary>
///
/// @var array Quantum.BattleProjectileQComponent::CollisionFlags
/// <summary>
/// Property for accessing the @cref{Quantum.BattleProjectileQComponent,_CollisionFlags_} array of flags for projectile's collisions.  
/// Used to prevent hitting multiple entities per frame.
/// </summary>
///
/// @var byte Quantum.BattleProjectileQComponent::_CollisionFlags_
/// <summary>
/// An array used internally for holding flags for projectile's collisions.  
/// Used to prevent hitting multiple entities per frame.  
/// Use @cref{Quantum.BattleProjectileQComponent,CollisionFlags} for accessing the flags.
/// </summary>